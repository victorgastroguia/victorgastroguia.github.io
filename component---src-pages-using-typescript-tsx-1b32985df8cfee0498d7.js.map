{"version":3,"file":"component---src-pages-using-typescript-tsx-1b32985df8cfee0498d7.js","mappings":"uJAqCA,IA3BgCA,IAAoC,IAAD,QAAlC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC5D,MACMC,EAD6B,MAChBH,EAASI,SAItBC,GAHwD,QAAzC,EAAiC,QAAjC,EAAGL,EAASI,SAASE,MAAM,cAAM,aAA9BC,EAAgCC,cAAM,QAAI,GACnB,EAG3CC,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,gBACdD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,KAAKX,IAEdQ,EAAAA,cAACE,EAAAA,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACrCX,GAGL,OACEQ,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iBAAiB,oBAAmBP,GACjDM,EAAAA,cAAAA,SAAAA,CAAQC,UAAU,iBAAiBL,GACnCI,EAAAA,cAAAA,OAAAA,KAAOP,GACPO,EAAAA,cAAAA,SAAAA,KAAQ,MACH,IAAII,MAAOC,cAAc,kBAC5B,IACAL,EAAAA,cAAAA,IAAAA,CAAGM,KAAK,4BAA2B,WAEjC,C,+CCkCV,IApD6BhB,IAAuC,IAAD,UAArC,YAAEiB,EAAW,MAAEf,EAAK,SAAEC,GAAU,EAc5D,MAAM,KAAEe,IAASC,EAAAA,EAAAA,gBAAc,cAgBzBC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjBE,EAAmBrB,MAExC,OACEQ,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQY,EAAkBpB,EAAK,MAAMoB,EAAiBpB,GACtDQ,EAAAA,cAAAA,OAAAA,CAAMc,KAAK,cAAcC,QAASL,IAClCV,EAAAA,cAAAA,OAAAA,CAAMgB,SAAS,WAAWD,QAASvB,IACnCQ,EAAAA,cAAAA,OAAAA,CAAMgB,SAAS,iBAAiBD,QAASL,IACzCV,EAAAA,cAAAA,OAAAA,CAAMgB,SAAS,UAAUD,QAAQ,YACjCf,EAAAA,cAAAA,OAAAA,CAAMc,KAAK,eAAeC,QAAQ,YAClCf,EAAAA,cAAAA,OAAAA,CACEc,KAAK,kBACLC,SAA0B,QAAjB,EAAAP,EAAKG,oBAAY,OAAQ,QAAR,EAAjBM,EAAmBC,cAAM,WAAR,EAAjBC,EAA2BC,UAAO,KAE7CpB,EAAAA,cAAAA,OAAAA,CAAMc,KAAK,gBAAgBC,QAASvB,IACpCQ,EAAAA,cAAAA,OAAAA,CAAMc,KAAK,sBAAsBC,QAASL,IACzCjB,EACA,C,6GClDP,MA+Ba4B,EAA0B,IAAMrB,EAAAA,cAACsB,EAAAA,EAAG,CAAC9B,MAAM,qBAExD,UAjCwDF,IAAA,IAAC,KACvDiC,EAAI,KACJC,EAAI,SACJjC,GACD,SACCS,EAAAA,cAACyB,EAAAA,EAAM,CAACjC,MAAM,mBAAmBD,SAAUA,GACzCS,EAAAA,cAAAA,KAAAA,KAAI,0CACJA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,0BAAI,YAAa,+DACd,0BAAI,eAAgB,wEAGlEA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,0BAAI,cAAe,oBACxD,0BAAI,cAAe,gBAAa,0BAAI,YAAa,UAEvDA,EAAAA,cAAAA,IAAAA,KAAG,kCAC8BwB,EAAK,uBAAqB,IACxDD,EAAKf,KAAKkB,UAAU,KAEvB1B,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGM,KAAK,yEAAwE,kCAE5E,KAGNN,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.tsx","webpack://gatsby-starter-blog/./src/components/seo.tsx","webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\ndeclare const __PATH_PREFIX__: unknown\n\ntype Props = React.PropsWithChildren & {\n  location: Location\n  title: string\n}\n\nconst Layout: React.FC<Props> = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  const amountOfSlashes = location.pathname.match(/\\//g)?.length ?? 0\n  const isFirstOrSecondLevel = amountOfSlashes < 3\n\n  const header = isFirstOrSecondLevel\n    ? <h1 className=\"main-heading\">\n      <Link to=\"/\">{title}</Link>\n    </h1>\n    : <Link className=\"header-link-home\" to=\"/\">\n      {title}\n    </Link>\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Construït amb\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ntype Props = React.PropsWithChildren & {\n  description?: string\n  title: string\n}\n\nconst Seo: React.FC<Props> = ({ description, title, children }) => {\n\n  type Query = {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        social: {\n          twitter: string\n        }\n      }\n    }\n  }\n\n  const { site } = useStaticQuery<Query>(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n"],"names":["_ref","location","title","children","isRootPath","pathname","header","match","_location$pathname$ma2","length","React","className","Link","to","Date","getFullYear","href","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_site$siteMetadata","name","content","property","_site$siteMetadata2","social","_site$siteMetadata2$s","twitter","Head","Seo","data","path","Layout","buildTime"],"sourceRoot":""}